<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AK的园子</title>
  <subtitle>王道无愧华夏心，成功都是拼搏勤。无视对手傲乾坤，敌对双目霸镇魂！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jsonwang.github.io/"/>
  <updated>2016-04-22T18:35:58.000Z</updated>
  <id>http://jsonwang.github.io/</id>
  
  <author>
    <name>AK</name>
    <email>287971051@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>工具篇之appledoc</title>
    <link href="http://jsonwang.github.io/2016/04/23/%E5%B7%A5%E5%85%B7%E7%AF%87%E4%B9%8Bappledoc/"/>
    <id>http://jsonwang.github.io/2016/04/23/工具篇之appledoc/</id>
    <published>2016-04-22T18:17:26.000Z</published>
    <updated>2016-04-22T18:35:58.000Z</updated>
    
    <content type="html">&lt;p&gt;做项目的人多了，就需要文档了。(其实就是一个人做的项目也要做好记录文档),当来一个新同事的时候,咋样能让他快速了解我们的工程,融入我们的团队当然主的还是通过文档的.&lt;/p&gt;
&lt;h2 id=&quot;appledoc&quot;&gt;&lt;a href=&quot;#appledoc&quot; class=&quot;headerlink&quot; title=&quot;appledoc&quot;&gt;&lt;/a&gt;appledoc&lt;/h2&gt;&lt;p&gt;appledoc 是在 stackoverflow 上被大家推荐的一个注释工具。有几个原因造成我比较喜欢它：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;它默认生成的文档风格和苹果的官方文档是一致的，而 doxygen 需要另外配置。&lt;br&gt;appledoc 就是用 objective-c 生成的，必要的时候调试和改动也比较方便。&lt;br&gt;可以生成 docset，并且集成到 Xcode 中。这一点是很赞的，相当于在源码中按住 option 再单击就可以调出相应方法的帮助。&lt;br&gt;appledoc 源码在 github 上，而 doxygen 在 svn 上。我个人比较偏激地认为比较活跃的开源项目都应该在 github 上。&lt;br&gt;相对于 headerdoc，它没有特殊的注释要求，可以用 /** */ 的格式，也可以兼容 /*! */ 的格式的注释，并且生成的注释有汇总页面。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;那么简单介绍一下如何安装 appledoc，安装非常简单，只需要 2 步：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$git clone git://github.com/tomaz/appledoc.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$cd appledoc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$sudo sh install-appledoc.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h2&gt;&lt;p&gt;使用 appledoc 时，只需要用如下命令即可：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$appledoc -o ./doc --project-name ynote --project-company youdao .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;appledoc 会扫描当前路径下的所有文件，然后生成好文档放到 doc 目录下。你也可以用 appledoc –help 查看所有可用的参数。&lt;br&gt;基本上使用起来还是比较方便的，详细的信息可以查看官方的文档：&lt;a href=&quot;http://gentlebytes.com/appledoc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gentlebytes.com/appledoc/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;做项目的人多了，就需要文档了。(其实就是一个人做的项目也要做好记录文档),当来一个新同事的时候,咋样能让他快速了解我们的工程,融入我们的团队当然主的还是通过文档的.&lt;/p&gt;
&lt;h2 id=&quot;appledoc&quot;&gt;&lt;a href=&quot;#appledoc&quot; class=&quot;headerlink&quot; title=&quot;appledoc&quot;&gt;&lt;/a&gt;appledoc&lt;/h2&gt;&lt;p&gt;appledoc 是在 stackoverflow 上被大家推荐的一个注释工具。有几个原因造成我比较喜欢它：&lt;br&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://jsonwang.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="appledoc" scheme="http://jsonwang.github.io/tags/appledoc/"/>
    
      <category term="pod" scheme="http://jsonwang.github.io/tags/pod/"/>
    
      <category term="github" scheme="http://jsonwang.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Swift学习资料汇总</title>
    <link href="http://jsonwang.github.io/2016/04/21/Swift%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/"/>
    <id>http://jsonwang.github.io/2016/04/21/Swift学习资料汇总/</id>
    <published>2016-04-20T18:14:12.000Z</published>
    <updated>2016-04-20T18:29:27.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Swift-github-开源项目&quot;&gt;&lt;a href=&quot;#Swift-github-开源项目&quot; class=&quot;headerlink&quot; title=&quot;Swift github 开源项目&quot;&gt;&lt;/a&gt;Swift github 开源项目&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.aswifter.com/2015/07/26/use-swiftdate/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SwiftDate：Swift中的日期处理库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Alamofire-Swift实现的HTTP请求库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/SwiftyJSON/SwiftyJSON&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SwiftyJSON-Swift版Json处理库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ankurp/Dollar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dollar-函数式编程辅助库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ReactKit/SwiftTask&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SwiftTask-Swift实现Promise模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Haneke/HanekeSwift&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HanekeSwift-轻量级的缓存实现&lt;/a&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;《The-Swift-Programming-Language》中文版&quot;&gt;&lt;a href=&quot;#《The-Swift-Programming-Language》中文版&quot; class=&quot;headerlink&quot; title=&quot;《The Swift Programming Language》中文版&quot;&gt;&lt;/a&gt;《The Swift Programming Language》中文版&lt;/h2&gt;&lt;p&gt;Swift 是一种新的编程语言，用于编写 iOS 和 OS X 应用。Swift 结合了 C 和 Objective-C 的优点并且不受C兼容性的限制。Swift 采用安全的编程模式并添加了很多新特性，这将使编程更简单，更灵活，也更有趣。Swift 是基于成熟而且倍受喜爱的 Cocoa 和 Cocoa Touch 框架，他的降临将重新定义软件开发。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://numbbbbb.gitbooks.io/-the-swift-programming-language-/content/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The Swift Programming Language 中文版&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;斯坦福Swift公开课&quot;&gt;&lt;a href=&quot;#斯坦福Swift公开课&quot; class=&quot;headerlink&quot; title=&quot;斯坦福Swift公开课&quot;&gt;&lt;/a&gt;斯坦福Swift公开课&lt;/h2&gt;&lt;p&gt;此公开课包括iOS SDK、用户界面设计、多触点技术下的用户交互、MVC模式与面向对象编程、内存管理、Swift语言等。其它主题包括动画、移动设备电源管理、多线程、网络与性能优化。&lt;br&gt;斯坦福大学的iOS开发公开课被称为iOS开发领域的顶级教程，讲师Paul Hegarty为斯坦福大学软件工程学教授，被大家亲切的称为白胡子老头，因此斯坦福的Swift公开课也被大家寄予厚望。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/x140yu/Developing_iOS_8_Apps_With_Swift#rd?sukey=fc78a68049a14bb25a02ea195902fc80ee6bd6b1335411009577482b37530f8469073cc03e12ff73ae5ab8415f1f847e&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;斯坦福Swift公开课&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Swift-语言指南&quot;&gt;&lt;a href=&quot;#Swift-语言指南&quot; class=&quot;headerlink&quot; title=&quot;Swift 语言指南&quot;&gt;&lt;/a&gt;Swift 语言指南&lt;/h2&gt;&lt;p&gt;这份指南汇集了 Swift 语言主流学习资源，并以开发者的视角整理编排。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/chenyc/SwiftGuide#rd?sukey=fc78a68049a14bb2d8ba543c69827072753d1de4747399a66e909a8339db48319e094383f93d63a8635d408acd518b6d&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift 语言指南&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Swift-github-开源项目&quot;&gt;&lt;a href=&quot;#Swift-github-开源项目&quot; class=&quot;headerlink&quot; title=&quot;Swift github 开源项目&quot;&gt;&lt;/a&gt;Swift github 开源项目&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.aswifter.com/2015/07/26/use-swiftdate/&quot;&gt;SwiftDate：Swift中的日期处理库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire&quot;&gt;Alamofire-Swift实现的HTTP请求库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/SwiftyJSON/SwiftyJSON&quot;&gt;SwiftyJSON-Swift版Json处理库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ankurp/Dollar&quot;&gt;Dollar-函数式编程辅助库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ReactKit/SwiftTask&quot;&gt;SwiftTask-Swift实现Promise模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Haneke/HanekeSwift&quot;&gt;HanekeSwift-轻量级的缓存实现&lt;/a&gt;
    
    </summary>
    
      <category term="Swift" scheme="http://jsonwang.github.io/categories/Swift/"/>
    
    
      <category term="Swift" scheme="http://jsonwang.github.io/tags/Swift/"/>
    
      <category term="The Swift Programming Language" scheme="http://jsonwang.github.io/tags/The-Swift-Programming-Language/"/>
    
      <category term="Playground" scheme="http://jsonwang.github.io/tags/Playground/"/>
    
  </entry>
  
  <entry>
    <title>工具篇之cocoapods</title>
    <link href="http://jsonwang.github.io/2016/04/16/%E5%B7%A5%E5%85%B7%E7%AF%87%E4%B9%8Bcocoapods/"/>
    <id>http://jsonwang.github.io/2016/04/16/工具篇之cocoapods/</id>
    <published>2016-04-16T03:49:19.000Z</published>
    <updated>2016-04-16T17:28:34.000Z</updated>
    
    <content type="html">&lt;p&gt;使用CocoaPods做依赖管理，使我们的工程更加自动化的、集中的、简单直观的管理第三方开源库。你不用下载开源库的源代码引入工程，不用向工程中添加Framework，不用解决开源库和开源库以及开源库和工程之间的依赖、重复问题，也不用管开源库更新等一系列问题。有了CocoaPods，你只管任性，CocoaPods会为你做好一切.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一,安装&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$sudo gem install cocoapods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果安装不上换一下淘宝的源&lt;br&gt;操作方法:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$gem sources -l 查看现在配置的源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$gem sources --remove https://rubygems.org/ 删除老的源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$gem sources -a http://ruby.taobao.org/  添加淘宝源&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod setup&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;#二,使用&lt;br&gt;1,创建一个xcode工程 并cd 到 xxxx.xcodeproj&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$pod init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3,vim Podfile 添加一行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod &amp;apos;AFNetworking&amp;apos;, &amp;apos;~&amp;gt; 3.0.0&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;4,打开xxx.xcworkspace&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#import &amp;quot;AFNetworking.h&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就可以正常使用了&lt;/p&gt;
&lt;p&gt;注意)MAC 升级到10.11 后,出现&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-bash: pod: command not found&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解决办法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gem install -n /usr/local/bin cocoapods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考资料&lt;a href=&quot;https://cocoapods.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://cocoapods.org/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;使用CocoaPods做依赖管理，使我们的工程更加自动化的、集中的、简单直观的管理第三方开源库。你不用下载开源库的源代码引入工程，不用向工程中添加Framework，不用解决开源库和开源库以及开源库和工程之间的依赖、重复问题，也不用管开源库更新等一系列问题。有了CocoaPods，你只管任性，CocoaPods会为你做好一切.&lt;br&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://jsonwang.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="pod" scheme="http://jsonwang.github.io/tags/pod/"/>
    
      <category term="cocoapods" scheme="http://jsonwang.github.io/tags/cocoapods/"/>
    
      <category term="AFNetworking" scheme="http://jsonwang.github.io/tags/AFNetworking/"/>
    
  </entry>
  
  <entry>
    <title>工具篇之pdf批量转xcassets</title>
    <link href="http://jsonwang.github.io/2016/04/16/%E5%B7%A5%E5%85%B7%E7%AF%87%E4%B9%8Bpdf%E6%89%B9%E9%87%8F%E8%BD%ACxcassets/"/>
    <id>http://jsonwang.github.io/2016/04/16/工具篇之pdf批量转xcassets/</id>
    <published>2016-04-16T03:20:49.000Z</published>
    <updated>2016-04-16T17:20:27.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;instruction&quot;&gt;&lt;a href=&quot;#instruction&quot; class=&quot;headerlink&quot; title=&quot;instruction&quot;&gt;&lt;/a&gt;&lt;strong&gt;instruction&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;写这个工具的目的是为了更高效率使用PDF资源,降低手动操作的错误率.主要功能 批量把 pdf 转成 xcassest&lt;br&gt;现在有的小伙伴可能已经支持 目前做的好一点的做是这样设计和工程代码在不同的分支.&lt;br&gt;如果新加一个图片资源做法大约是这样:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设计师提交到svn分支&lt;/li&gt;
&lt;li&gt;研发人员更新资源&lt;/li&gt;
&lt;li&gt;研发人员拖到xcassets中&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用这个工具设计师在出PDF资源后 直接生成研究人员人的xcassets 提交到分支,开发人员更新就可以得到最新资源,这个工具主要是给设计师用的.&lt;br&gt;目录结构说明:&lt;/p&gt;
&lt;p&gt;./bin 编译好的可执行文件&lt;/p&gt;
&lt;p&gt;./pdfConvertXcassets 主要代码&lt;/p&gt;
&lt;p&gt;./sample 例子pdf 文件&lt;/p&gt;
&lt;p&gt;How to use&lt;br&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160320120843970&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;设置输入 和输出path 点开始就可以了&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jsonwang/pdf2xcassets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github 源码地址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;instruction&quot;&gt;&lt;a href=&quot;#instruction&quot; class=&quot;headerlink&quot; title=&quot;instruction&quot;&gt;&lt;/a&gt;&lt;strong&gt;instruction&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;写这个工具的目的是为了更高效率使用PDF资源,降低手动操作的错误率.主要功能 批量把 pdf 转成 xcassest&lt;br&gt;现在有的小伙伴可能已经支持 目前做的好一点的做是这样设计和工程代码在不同的分支.&lt;br&gt;如果新加一个图片资源做法大约是这样:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设计师提交到svn分支&lt;/li&gt;
&lt;li&gt;研发人员更新资源&lt;/li&gt;
&lt;li&gt;研发人员拖到xcassets中
    
    </summary>
    
      <category term="开发工具" scheme="http://jsonwang.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="github" scheme="http://jsonwang.github.io/tags/github/"/>
    
      <category term="xcassets" scheme="http://jsonwang.github.io/tags/xcassets/"/>
    
      <category term="pdf" scheme="http://jsonwang.github.io/tags/pdf/"/>
    
  </entry>
  
  <entry>
    <title>让APP数据统计如此简单</title>
    <link href="http://jsonwang.github.io/2016/01/23/%E8%AE%A9APP%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1%E5%A6%82%E6%AD%A4%E7%AE%80%E5%8D%95/"/>
    <id>http://jsonwang.github.io/2016/01/23/让APP数据统计如此简单/</id>
    <published>2016-01-23T07:45:46.000Z</published>
    <updated>2016-04-16T18:15:03.000Z</updated>
    
    <content type="html">&lt;p&gt;现在APP开发都会加数据统计的功能,比如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点登录btn的事件发生的次数&lt;/li&gt;
&lt;li&gt;在好友界面停留多少时间&lt;/li&gt;
&lt;li&gt;修改头像从选择到上传成功用了多长时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;统计的数量和项目,业务需求不一样个数也就不一样 从几十到几百不等.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;现在做统计平台的有不少,比如友盟,诸葛ios ,FLURRY，GA等,就要在加入这些SDK 的时候要注意一点广告ID追踪码的问题 要不有可能会被苹果拒了&lt;/p&gt;
&lt;p&gt;下面先以友盟为例按上面的三个需求看一下代码&lt;br&gt;&lt;a href=&quot;http://dev.umeng.com/analytics/ios-doc/integration?spm=0.0.0.0.4Td78E&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;友盟iOS统计集成文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1,点登录btn的事件发生的次数&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[MobClick event:@&amp;quot;10000&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2,在好友界面停留多少时间&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)viewWillAppear:(BOOL)animated&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [super viewWillAppear:animated];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [MobClick beginLogPageView:@&amp;quot;PageOne&amp;quot;];//(&amp;quot;PageOne&amp;quot;为页面名称，可自定义)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)viewWillDisappear:(BOOL)animated&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [super viewWillDisappear:animated];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [MobClick endLogPageView:@&amp;quot;PageOne&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3,修改头像从选择到上传成功用了多长时间&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[MobClick event:@&amp;quot;uploadAvatar&amp;quot; attributes:@&amp;#123;@&amp;quot;duration&amp;quot; : @20]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;花几个小时 加了50个onclick 事件,30个界面的停留时间长,20个自定义事件.完成 抽个烟准备下班.&lt;br&gt;等等,产品经理过来了,小王有几个新统计文档已经发你企邮了如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;新加的那个会员功能也要在加20个左右事件.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;所有统计都同步给我们自己的server发一份好和第三方广告平台和统计平台做对比&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;所有的统计在给诸葛io发一份 他们会根据用户的操作形为做有价值分析&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实刚才我们加的那些统计代码是有一个问题的&lt;/p&gt;
&lt;p&gt;1,代码在各自的控制器,类里,VIEW 等和业务逻辑都参杂在一起,到处都是统计的代码,耦合度太高不好维护 当改版或者重构时，有可能忘了把相应的打点代码迁移过去(我原来就出现过多次 三个月前的统计然后改版本了,对应的统计没有加上,数据报表就会有问题)&lt;/p&gt;
&lt;p&gt;2,对于如上需求就不太好处理了&lt;/p&gt;
&lt;p&gt;所以我对统计这块做了一些整理 相关的代码demo 已经上传github&lt;br&gt;主要思路是用 AOP(Aspect-Oriented-Programming)，就是「面向切面编程」&lt;br&gt;就是可以动态的在函数调用的前后插一段代码。iOS 可以使用 Pete Steinberger 开发的 Aspects 这个库，大致原理是在 runtime 层，通过 swizzle method 来实现的&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;现在APP开发都会加数据统计的功能,比如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点登录btn的事件发生的次数&lt;/li&gt;
&lt;li&gt;在好友界面停留多少时间&lt;/li&gt;
&lt;li&gt;修改头像从选择到上传成功用了多长时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;统计的数量和项目,业务需求不一样个数也就不一样 从几十到几百不等.&lt;br&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://jsonwang.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="友盟" scheme="http://jsonwang.github.io/tags/%E5%8F%8B%E7%9B%9F/"/>
    
      <category term="统计" scheme="http://jsonwang.github.io/tags/%E7%BB%9F%E8%AE%A1/"/>
    
      <category term="swizzle method" scheme="http://jsonwang.github.io/tags/swizzle-method/"/>
    
      <category term="AOP" scheme="http://jsonwang.github.io/tags/AOP/"/>
    
      <category term="runtime" scheme="http://jsonwang.github.io/tags/runtime/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建个人博客那些水坑</title>
    <link href="http://jsonwang.github.io/2016/01/13/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%82%A3%E4%BA%9B%E6%B0%B4%E5%9D%91/"/>
    <id>http://jsonwang.github.io/2016/01/13/Hexo搭建个人博客那些水坑/</id>
    <published>2016-01-13T06:53:57.000Z</published>
    <updated>2016-04-16T16:54:51.000Z</updated>
    
    <content type="html">&lt;p&gt;配置的步骤就不在里说了,这里主要说一个过程中遇到的水坑,有用遇到别的问题可以在评论里反馈一下帮助更多的朋友.&lt;br&gt;推荐几个兄弟的博客&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.aswifter.com/2016/01/16/hexo-with-gitcafe/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.aswifter.com/2016/01/16/hexo-with-gitcafe/&lt;/a&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sunwhut.com/2015/10/30/buildBlog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sunwhut.com/2015/10/30/buildBlog/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://theme-next.iissnan.com/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://theme-next.iissnan.com/getting-started.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我收集到的一些水坑&lt;/p&gt;
&lt;p&gt;1, repo:$&lt;a href=&quot;https://github.com/jsonwang/jsonwang.github.io.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/jsonwang/jsonwang.github.io.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;“$” 这里一定要有空格&lt;br&gt;后面的URL 地址也一定要这样的格式jsonwang换成你的github的用户名不是登录名&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;配置的步骤就不在里说了,这里主要说一个过程中遇到的水坑,有用遇到别的问题可以在评论里反馈一下帮助更多的朋友.&lt;br&gt;推荐几个兄弟的博客&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.aswifter.com/2016/01/16/hexo-with-gitcafe/&quot;&gt;https://www.aswifter.com/2016/01/16/hexo-with-gitcafe/&lt;/a&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://jsonwang.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="github" scheme="http://jsonwang.github.io/tags/github/"/>
    
      <category term="hexo" scheme="http://jsonwang.github.io/tags/hexo/"/>
    
      <category term="next" scheme="http://jsonwang.github.io/tags/next/"/>
    
  </entry>
  
</feed>
